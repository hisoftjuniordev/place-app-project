// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlaceApp.Api.Data;

#nullable disable

namespace PlaceApp.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250620121716_DodaneTabeleZaNastavitve")]
    partial class DodaneTabeleZaNastavitve
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlaceApp.Api.Models.DohodninskaLestvica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AbsolutniZnesek")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MejaDo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Stopnja")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("ZaporednaSt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DohodninskeLestvice");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.NastavitveObracuna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CenaPrehrane")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CenaPrevozaKm")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("MinimalnaPlaca")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("VeljavnoOd")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NastavitveObracuna");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Obracun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DatumIzdelave")
                        .HasColumnType("datetime2");

                    b.Property<int>("Leto")
                        .HasColumnType("int");

                    b.Property<int>("Mesec")
                        .HasColumnType("int");

                    b.Property<int>("PodjetjeID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PodjetjeID");

                    b.ToTable("Obracuni");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Odtegljaj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("JeAktiven")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("KonecOdplacevanja")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MesecniObrok")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SkupniZnesek")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ZacetekOdplacevanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZaposleniID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ZaposleniID");

                    b.ToTable("Odtegljaji");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Placa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BrutoPlaca")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CelotenStrosekDelodajalca")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DelovnaDobaProcent")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Dohodnina")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KilometrineFiksno")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KmCena")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("NetoPlaca")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Obdobje")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Odtegljaji")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PlacaniPraznikiUre")
                        .HasColumnType("int");

                    b.Property<decimal>("Poracun")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PosebneOlajsave")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PrehranaDni")
                        .HasColumnType("int");

                    b.Property<decimal>("PrehranaZnesek")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PrevozKm")
                        .HasColumnType("int");

                    b.Property<int>("RednoDeloUre")
                        .HasColumnType("int");

                    b.Property<decimal>("Stimulacija")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UrnaPostavka")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ZaIzplacilo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ZaposlenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZaposlenId");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.PlacilnaLista", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("NetoZaIzplacilo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ObracunID")
                        .HasColumnType("int");

                    b.Property<decimal>("SkupajBruto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SteviloUr")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UreOdsotnosti")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ZaposleniID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ObracunID");

                    b.HasIndex("ZaposleniID");

                    b.ToTable("PlacilneListe");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Podjetje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DavcnaStevilka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaticnaStevilka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Podjetja");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Pogodba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("BrutoPlaca")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DodatekMinuloDelo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("KonecVeljavnosti")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ZacetekVeljavnosti")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZaposleniID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ZaposleniID");

                    b.ToTable("Pogodbe");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.PostavkaPlacilneListe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlacilnaListaID")
                        .HasColumnType("int");

                    b.Property<string>("TipPostavke")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Znesek")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("PlacilnaListaID");

                    b.ToTable("PostavkePlacilneListe");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Zaposlen", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("DatumPrenehanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZaposlitve")
                        .HasColumnType("datetime2");

                    b.Property<string>("DavcnaStevilka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMSO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("JeAktiven")
                        .HasColumnType("bit");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PodjetjeID")
                        .HasColumnType("int");

                    b.Property<string>("Priimek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TRR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PodjetjeID");

                    b.ToTable("Zaposleni");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Obracun", b =>
                {
                    b.HasOne("PlaceApp.Api.Models.Podjetje", "Podjetje")
                        .WithMany()
                        .HasForeignKey("PodjetjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Podjetje");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Odtegljaj", b =>
                {
                    b.HasOne("PlaceApp.Api.Models.Zaposlen", "Zaposlen")
                        .WithMany()
                        .HasForeignKey("ZaposleniID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaposlen");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Placa", b =>
                {
                    b.HasOne("PlaceApp.Api.Models.Zaposlen", "Zaposlen")
                        .WithMany()
                        .HasForeignKey("ZaposlenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaposlen");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.PlacilnaLista", b =>
                {
                    b.HasOne("PlaceApp.Api.Models.Obracun", "Obracun")
                        .WithMany()
                        .HasForeignKey("ObracunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaceApp.Api.Models.Zaposlen", "Zaposlen")
                        .WithMany()
                        .HasForeignKey("ZaposleniID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Obracun");

                    b.Navigation("Zaposlen");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Pogodba", b =>
                {
                    b.HasOne("PlaceApp.Api.Models.Zaposlen", "Zaposlen")
                        .WithMany()
                        .HasForeignKey("ZaposleniID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaposlen");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.PostavkaPlacilneListe", b =>
                {
                    b.HasOne("PlaceApp.Api.Models.PlacilnaLista", "PlacilnaLista")
                        .WithMany()
                        .HasForeignKey("PlacilnaListaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlacilnaLista");
                });

            modelBuilder.Entity("PlaceApp.Api.Models.Zaposlen", b =>
                {
                    b.HasOne("PlaceApp.Api.Models.Podjetje", "Podjetje")
                        .WithMany()
                        .HasForeignKey("PodjetjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Podjetje");
                });
#pragma warning restore 612, 618
        }
    }
}
